<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/global.css">
    <link rel="stylesheet" href="/css/contact.css">
</head>
<body>
    <%- include('partials/header') %>

    <main class="main-content">
        <section class="contact-section">
            <div class="container">
                <h1 class="page-title">Contact Us</h1>
                <p class="page-subtitle">We'd love to hear from you! Get in touch with any questions, suggestions, or feedback.</p>
                
                <div class="contact-content">
                    <div class="contact-info">
                        <h2>Get in Touch</h2>
                        <div class="info-item">
                            <div class="info-icon">üìç</div>
                            <div class="info-text">
                                <h3>Address</h3>
                                <p>Community Portal Centre<br>15 Victoria Street<br>London E15 4PH<br>United Kingdom</p>
                            </div>
                        </div>
                        
                        <div class="info-item">
                            <div class="info-icon">üìû</div>
                            <div class="info-text">
                                <h3>Phone</h3>
                                <p>020 7946 0958</p>
                            </div>
                        </div>
                        
                        <div class="info-item">
                            <div class="info-icon">‚úâÔ∏è</div>
                            <div class="info-text">
                                <h3>Email</h3>
                                <p>info@communityportal.uk</p>
                            </div>
                        </div>
                        
                        <div class="info-item">
                            <div class="info-icon">üïí</div>
                            <div class="info-text">
                                <h3>Office Hours</h3>
                                <p>Monday - Friday: 9:00 AM - 5:00 PM</p>
                            </div>
                        </div>
                    </div>

                    <div class="contact-form-container">
                        <h2>Send us a Message</h2>
                        <form id="contactForm" class="contact-form" method="POST" action="/contact" novalidate>
                            <div class="form-group">
                                <label for="name">Full Name *</label>
                                <input type="text" id="name" name="name" required
                                       placeholder="Enter your full name">
                            </div>
                            
                            <div class="form-group">
                                <label for="email">Email Address *</label>
                                <input type="email" id="email" name="email" required
                                       placeholder="Enter your email address">
                            </div>
                            
                            <div class="form-group">
                                <label for="phone">Phone Number</label>
                                <input type="tel" id="phone" name="phone" 
                                       placeholder="Enter your phone number (optional)">
                            </div>
                            
                            <div class="form-group">
                                <label for="subject">Subject *</label>
                                <select id="subject" name="subject" required>
                                    <option value="">Please select a subject</option>
                                    <option value="general">General Inquiry</option>
                                    <option value="event">Event Information</option>
                                    <option value="volunteer">Volunteer Opportunities</option>
                                    <option value="suggestion">Suggestion/Feedback</option>
                                    <option value="complaint">Complaint</option>
                                    <option value="technical">Technical Support</option>
                                    <option value="other">Other</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label for="area">Community Area of Interest</label>
                                <select id="area" name="area">
                                    <option value="">Select an area (optional)</option>
                                    <option value="sports">Sports & Recreation</option>
                                    <option value="health">Health & Wellness</option>
                                    <option value="education">Education & Learning</option>
                                    <option value="arts">Arts & Culture</option>
                                    <option value="environment">Environment & Sustainability</option>
                                    <option value="social">Social Services</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label for="message">Message *</label>
                                <textarea id="message" name="message" rows="6" required
                                          placeholder="Please provide details about your inquiry or feedback..."></textarea>
                            </div>
                            
                            <div class="form-group checkbox-group">
                                <label class="checkbox-label">
                                    <input type="checkbox" id="newsletter" name="newsletter" value="yes">
                                    <span class="checkmark"></span>
                                    I would like to receive updates about community events and activities
                                </label>
                            </div>
                            
                            <div class="form-group checkbox-group">
                                <label class="checkbox-label">
                                    <input type="checkbox" id="privacy" name="privacy" value="accepted" required>
                                    <span class="checkmark"></span>
                                    I agree to the <a href="/privacy" target="_blank" rel="noopener">Privacy Policy</a> and consent to the processing of my personal data *
                                </label>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="btn-primary">Send Message</button>
                                <button type="reset" class="btn-secondary">Clear Form</button>
                            </div>
                        </form>
                        
                        <div id="success-message" class="success-message hidden">
                            <div class="success-icon">‚úÖ</div>
                            <p>Thank you for your message! We'll get back to you within 24 hours.</p>
                        </div>
                    </div>
                </div>

                <div class="additional-info">
                    <h2>Other Ways to Get Involved</h2>
                    <div class="involvement-grid">
                        <div class="involvement-card">
                            <div class="involvement-icon">üóìÔ∏è</div>
                            <h3>Attend Our Meetings</h3>
                            <p>Join our monthly community meetings every first Tuesday at 7:00 PM in the Community Center.</p>
                        </div>
                        
                        <div class="involvement-card">
                            <div class="involvement-icon">ü§ù</div>
                            <h3>Volunteer</h3>
                            <p>Help make a difference in your community by volunteering for events and ongoing programs.</p>
                        </div>
                        
                        <div class="involvement-card">
                            <div class="involvement-icon">üí°</div>
                            <h3>Share Ideas</h3>
                            <p>Have an idea for a new program or event? We'd love to hear your suggestions!</p>
                        </div>
                        
                        <div class="involvement-card">
                            <div class="involvement-icon">üì¢</div>
                            <h3>Spread the Word</h3>
                            <p>Help us reach more community members by sharing our events and programs with friends and neighbors.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <%- include('partials/footer') %>

    <script src="/js/script.js"></script>
    <script>
        // Enhanced contact form handling with validation
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, looking for contact form...');
            const contactForm = document.getElementById('contactForm');
            console.log('Contact form found:', contactForm);
            
            if (contactForm) {
                console.log('Contact form validation initialized');
                
                // Function to clear field errors
                function clearFieldError(field) {
                    field.classList.remove('error');
                    // Clear the forced styles
                    field.style.borderColor = '';
                    field.style.boxShadow = '';
                }
                
                // Function to show field error
                function showFieldError(field) {
                    field.classList.add('error');
                    // Force the style update
                    field.style.borderColor = '#e74c3c';
                    field.style.boxShadow = '0 0 0 3px rgba(231, 76, 60, 0.1)';
                }
                
                // Function to validate required fields
                function validateForm() {
                    console.log('Starting validation...');
                    
                    // Get all required field elements
                    const nameField = document.getElementById('name');
                    const emailField = document.getElementById('email');
                    const subjectField = document.getElementById('subject');
                    const messageField = document.getElementById('message');
                    const privacyField = document.getElementById('privacy');
                    
                    const requiredFields = [
                        { field: nameField, name: 'name' },
                        { field: emailField, name: 'email' },
                        { field: subjectField, name: 'subject' },
                        { field: messageField, name: 'message' },
                        { field: privacyField, name: 'privacy' }
                    ];
                    
                    let isValid = true;
                    const errors = {};
                    
                    // Clear ALL previous errors first
                    requiredFields.forEach(item => {
                        if (item.field) {
                            clearFieldError(item.field);
                        }
                    });
                    
                    // Now validate and ONLY add errors to fields that are actually missing
                    requiredFields.forEach(item => {
                        const field = item.field;
                        const name = item.name;
                        
                        if (!field) {
                            console.error(`Field not found: ${name}`);
                            return;
                        }
                        
                        let hasError = false;
                        
                        if (name === 'privacy') {
                            if (!field.checked) {
                                hasError = true;
                                errors[name] = 'You must accept the privacy policy';
                            }
                        } else if (name === 'email') {
                            const value = field.value.trim();
                            if (!value) {
                                hasError = true;
                                errors[name] = 'Email address is required';
                            } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value)) {
                                hasError = true;
                                errors[name] = 'Please enter a valid email address';
                            }
                        } else if (name === 'subject') {
                            if (!field.value || field.value === '') {
                                hasError = true;
                                errors[name] = 'Subject is required';
                            }
                        } else {
                            if (!field.value || field.value.trim() === '') {
                                hasError = true;
                                errors[name] = `${name.charAt(0).toUpperCase() + name.slice(1)} is required`;
                            }
                        }
                        
                        // Only show error border if this field has an error
                        if (hasError) {
                            console.log(`Field ${name} has error, showing red border`);
                            showFieldError(field);
                            isValid = false;
                        } else {
                            console.log(`Field ${name} is valid`);
                        }
                    });
                    
                    console.log('Validation complete. Is valid:', isValid, 'Errors:', errors);
                    return { isValid, errors };
                }
                
                // Add event listeners to clear errors when user starts typing
                const fields = ['name', 'email', 'subject', 'message', 'privacy'];
                fields.forEach(fieldName => {
                    const field = document.getElementById(fieldName);
                    if (field) {
                        if (fieldName === 'privacy') {
                            field.addEventListener('change', () => {
                                clearFieldError(field);
                                // Hide success message when user starts interacting again
                                const successMessage = document.getElementById('success-message');
                                if (successMessage) {
                                    successMessage.style.display = 'none';
                                }
                            });
                        } else {
                            field.addEventListener('input', () => {
                                clearFieldError(field);
                                // Hide success message when user starts typing again
                                const successMessage = document.getElementById('success-message');
                                if (successMessage) {
                                    successMessage.style.display = 'none';
                                }
                            });
                        }
                    }
                });
                
                contactForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    console.log('Form submitted, validating...');
                    
                    // Validate form
                    const validation = validateForm();
                    console.log('Validation result:', validation);
                    
                    if (!validation.isValid) {
                        console.log('Form invalid, showing field errors');
                        return;
                    }
                    
                    // Prepare form data as JSON
                    const formData = new FormData(contactForm);
                    const jsonData = {};
                    for (let [key, value] of formData.entries()) {
                        jsonData[key] = value;
                    }
                    
                    console.log('Form data being sent:', jsonData);
                    
                    const submitButton = contactForm.querySelector('button[type="submit"]');
                    const originalText = submitButton.textContent;
                    
                    // Update button state
                    submitButton.textContent = 'Sending...';
                    submitButton.disabled = true;
                    
                    // No form status messages needed
                    
                    // Send AJAX request
                    fetch('/messages', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(jsonData)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Success - reset form and clear field errors
                            contactForm.reset();
                            const allFields = contactForm.querySelectorAll('input, select, textarea');
                            allFields.forEach(field => clearFieldError(field));
                            
                            // Show success message
                            const successMessage = document.getElementById('success-message');
                            successMessage.style.display = 'flex';
                            
                            // Hide success message after 5 seconds
                            setTimeout(() => {
                                successMessage.style.display = 'none';
                            }, 5000);
                            
                        } else {
                            // Handle server validation errors - only show field errors
                            if (data.errors) {
                                Object.keys(data.errors).forEach(fieldName => {
                                    const field = document.getElementById(fieldName);
                                    if (field) {
                                        showFieldError(field);
                                    }
                                });
                            }
                        }
                    })
                    .catch(error => {
                        console.error('Form submission error:', error);
                        // Silent error handling - no user message shown
                    })
                    .finally(() => {
                        submitButton.textContent = originalText;
                        submitButton.disabled = false;
                    });
                });
            }
        });
    </script>

    <%- include('partials/cookie-consent') %>
</body>
</html>